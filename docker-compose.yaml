version: "3"

services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"
  db:
    image: postgres:16-alpine
#    restart if its is fall down
    restart: on-failure
#    mask the sensitive values f.e POSTGRES_USER and etc
    env_file:
      - .env
    expose:
      - "5432"
#    volumes for do not delete data after restart or deleting container
    volumes:
      - pg_data:/var/lib/postgresql/data
#    check that container works properly
    healthcheck:
#                                              mask user
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
#    to keep the container running
    tty: true
    ports:
      - "8000:8000"
#    command to run
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#    running only if db is working properly
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l info
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

volumes:
  pg_data: